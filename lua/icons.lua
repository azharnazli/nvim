local M = {}
M.icons = {
  ActiveLSP = '',
  ActiveTS = '',
  ArrowLeft = '',
  ArrowRight = '',
  Bookmarks = '',
  BufferClose = '󰅖',
  DapBreakpoint = '',
  DapBreakpointCondition = '',
  DapBreakpointRejected = '',
  DapLogPoint = '󰛿',
  DapStopped = '󰁕',
  Debugger = '',
  DefaultFile = '󰈙',
  Diagnostic = '󰒡',
  DiagnosticError = '',
  DiagnosticHint = '󰌵',
  DiagnosticInfo = '󰋼',
  DiagnosticWarn = '',
  Ellipsis = '…',
  Environment = '',
  FileNew = '',
  FileModified = '',
  FileReadOnly = '',
  FoldClosed = '',
  FoldOpened = '',
  FoldSeparator = ' ',
  FolderClosed = '',
  FolderEmpty = '',
  FolderOpen = '',
  Git = '󰊢',
  GitAdd = '',
  GitBranch = '',
  GitChange = '',
  GitConflict = '',
  GitDelete = '',
  GitIgnored = '◌',
  GitRenamed = '➜',
  GitSign = '▎',
  GitStaged = '✓',
  GitUnstaged = '✗',
  GitUntracked = '★',
  List = '',
  LSPLoading1 = '',
  LSPLoading2 = '󰀚',
  LSPLoading3 = '',
  MacroRecording = '',
  Package = '󰏖',
  Paste = '󰅌',
  Refresh = '',
  Search = '',
  Selected = '❯',
  Session = '󱂬',
  Sort = '󰒺',
  Spellcheck = '󰓆',
  Tab = '󰓩',
  TabClose = '󰅙',
  Terminal = '',
  Window = '',
  WordFile = '󰈭',
}
M.text_icons = {
  ActiveLSP = 'LSP:',
  ArrowLeft = '<',
  ArrowRight = '>',
  BufferClose = 'x',
  DapBreakpoint = 'B',
  DapBreakpointCondition = 'C',
  DapBreakpointRejected = 'R',
  DapLogPoint = 'L',
  DapStopped = '>',
  DefaultFile = '[F]',
  DiagnosticError = 'X',
  DiagnosticHint = '?',
  DiagnosticInfo = 'i',
  DiagnosticWarn = '!',
  Ellipsis = '...',
  Environment = 'Env:',
  FileModified = '*',
  FileReadOnly = '[lock]',
  FoldClosed = '+',
  FoldOpened = '-',
  FoldSeparator = ' ',
  FolderClosed = '[D]',
  FolderEmpty = '[E]',
  FolderOpen = '[O]',
  GitAdd = '[+]',
  GitChange = '[/]',
  GitConflict = '[!]',
  GitDelete = '[-]',
  GitIgnored = '[I]',
  GitRenamed = '[R]',
  GitSign = '|',
  GitStaged = '[S]',
  GitUnstaged = '[U]',
  GitUntracked = '[?]',
  MacroRecording = 'Recording:',
  Paste = '[PASTE]',
  Search = '?',
  Selected = '*',
  Spellcheck = '[SPELL]',
  TabClose = 'X',
}

function M.get_icon(kind, padding, no_fallback)
  local icons_enabled = vim.g.icons_enabled ~= false
  if not icons_enabled and no_fallback then
    return ''
  end
  local icon_pack = assert(M[icons_enabled and 'icons' or 'text_icons'])
  local icon = icon_pack[kind]
  return icon and icon .. (' '):rep(padding or 0) or ''
end

return M
